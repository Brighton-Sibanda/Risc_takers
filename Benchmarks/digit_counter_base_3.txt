// start
// input: n = x5
// output = x1

num_digits:
    	andi x8, x8, 0
      addi x6, x8, 2047
      addi x3, x8, 3
      andi x1, x1, 0
      addi x2, x8, 100
      mul x5, x6, x2
      beq x5, x8, record

    base_3_loop:
    	addi x1, x1, 1
      andi x4, x4, 0
      bge x5, x8, divide
      continue:
        add x5, x4, x8
        beq x5, x8, record
        bge x5, x8, base_3_loop
    divide:
        sub x5, x5, x3
        blt x5, x8, continue
        addi x4, x4, 1
        bge x5, x3, divide
        blt x5, x3, continue

record:
    addi x9, x8, 0x80
    addi x7, x8, 3        
    addi x4, x8, 10
    addi x10, x8, 1       
    addi x11, x8, 10       

calculate_powers:
    sb x10, 0(x9)    

    addi x9, x9, 1
    addi x12, x8, 3        
    mul x10, x10, x12

    addi x4, x4, -1  
    bne x4, x8, calculate_powers  

done:
    